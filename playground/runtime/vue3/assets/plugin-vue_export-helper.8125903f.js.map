{"version":3,"file":"plugin-vue_export-helper.8125903f.js","sources":["../../../../packages/utils/src/index.ts","../../plugin-vue:export-helper"],"sourcesContent":["/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment';\n\nimport { MNode } from '@tmagic/schema';\n\nexport const sleep = (ms: number): Promise<void> =>\n  new Promise((resolve) => {\n    const timer = setTimeout(() => {\n      clearTimeout(timer);\n      resolve();\n    }, ms);\n  });\n\nexport const datetimeFormatter = (v: string | Date, defaultValue = '-', f = 'YYYY-MM-DD HH:mm:ss') => {\n  let format = f;\n  if (format === 'timestamp') {\n    format = 'x';\n  }\n\n  if (v) {\n    let time = null;\n    if ((typeof v === 'string' && v.includes('Z')) || v.constructor === Date) {\n      // UTC字符串时间或Date对象格式化为北京时间\n      time = moment(v).utcOffset('+08:00').format(format);\n    } else {\n      time = moment(v).format(format);\n    }\n\n    if (format === 'x') {\n      return +time;\n    }\n    // 格式化为北京时间\n    if (time !== 'Invalid date') {\n      return time;\n    }\n    return defaultValue;\n  }\n  return defaultValue;\n};\n\nexport const asyncLoadJs = (() => {\n  // 正在加载或加载成功的存入此Map中\n  const documentMap = new Map();\n\n  return (url: string, crossOrigin?: string, document = globalThis.document) => {\n    let loaded = documentMap.get(document);\n    if (!loaded) {\n      loaded = new Map();\n      documentMap.set(document, loaded);\n    }\n\n    // 正在加载或已经加载成功的，直接返回\n    if (loaded.get(url)) return loaded.get(url);\n\n    const load = new Promise<void>((resolve, reject) => {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      if (crossOrigin) {\n        script.crossOrigin = crossOrigin;\n      }\n      script.src = url;\n      document.body.appendChild(script);\n      script.onload = () => {\n        resolve();\n      };\n      script.onerror = () => {\n        reject(new Error('加载失败'));\n      };\n      setTimeout(() => {\n        reject(new Error('timeout'));\n      }, 60 * 1000);\n    }).catch((err) => {\n      // 加载失败的，从map中移除，第二次加载时，可以再次执行加载\n      loaded.delete(url);\n      throw err;\n    });\n\n    loaded.set(url, load);\n    return loaded.get(url);\n  };\n})();\n\nexport const asyncLoadCss = function (url: string) {\n  return new Promise((resolve, reject) => {\n    const hasLoaded = globalThis.document.querySelector(`link[href=\"${url}\"]`);\n    if (hasLoaded) {\n      resolve(undefined);\n      return;\n    }\n\n    const node = document.createElement('link');\n    node.rel = 'stylesheet';\n    node.href = url;\n    document.getElementsByTagName('head')[0].appendChild(node);\n    node.onload = resolve;\n    node.onerror = reject;\n  });\n};\n\n// 驼峰转换横线\nexport const toLine = (name = '') => name.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n\nexport const toHump = (name = ''): string => name.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase());\n\nexport const emptyFn = (): any => undefined;\n\n/**\n * 通过id获取组件在应用的子孙路径\n * @param {number | string} id 组件id\n * @param {Array} data 要查找的根容器节点\n * @return {Array} 组件在data中的子孙路径\n */\nexport const getNodePath = (id: number | string, data: MNode[] = []): MNode[] => {\n  const path: MNode[] = [];\n\n  const get = function (id: number | string, data: MNode[]): MNode | null {\n    if (!Array.isArray(data)) {\n      return null;\n    }\n\n    for (let i = 0, l = data.length; i < l; i++) {\n      const item: any = data[i];\n\n      path.push(item);\n      if (`${item.id}` === `${id}`) {\n        return item;\n      }\n\n      if (item.items) {\n        const node = get(id, item.items);\n        if (node) {\n          return node;\n        }\n      }\n\n      path.pop();\n    }\n\n    return null;\n  };\n\n  get(id, data);\n\n  return path;\n};\n\nexport const filterXSS = (str: string) =>\n  str.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n\nexport const getUrlParam = (param: string, url?: string) => {\n  const u = url || location.href;\n  const reg = new RegExp(`[?&#]${param}=([^&#]+)`, 'gi');\n\n  const matches = u.match(reg);\n  let strArr;\n  if (matches && matches.length > 0) {\n    strArr = matches[matches.length - 1].split('=');\n    if (strArr && strArr.length > 1) {\n      // 过滤XSS字符\n      return filterXSS(strArr[1]);\n    }\n    return '';\n  }\n  return '';\n};\n\nexport const isPop = (node: MNode): boolean => node.type.toLowerCase().endsWith('pop');\n","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n"],"names":[],"mappings":";MAqHa,SAAS,CAAC,OAAO,OAAO,KAAK,QAAQ,cAAc,OAAO;MAY1D,cAAc,CAAC,IAAqB,OAAgB,OAAgB;QACzE,OAAgB;QAEhB,MAAM,SAAU,KAAqB,OAA6B;QAClE,CAAC,MAAM,QAAQ,QAAO;aACjB;AAAA;aAGA,IAAI,GAAG,IAAI,MAAK,QAAQ,IAAI,GAAG,KAAK;YACrC,OAAY,MAAK;WAElB,KAAK;UACN,GAAG,KAAK,SAAS,GAAG,OAAM;eACrB;AAAA;UAGL,KAAK,OAAO;cACR,OAAO,IAAI,KAAI,KAAK;YACtB,MAAM;iBACD;AAAA;AAAA;WAIN;AAAA;WAGA;AAAA;MAGL,IAAI;SAED;AAAA;MAGI,YAAY,CAAC,QACxB,IAAI,QAAQ,MAAM,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,MAAM,UAAU,QAAQ,MAAM;MAE3E,cAAc,CAAC,OAAe,QAAiB;QACpD,IAAI,OAAO,SAAS;QACpB,MAAM,IAAI,OAAO,QAAQ,kBAAkB;QAE3C,UAAU,EAAE,MAAM;MACpB;MACA,WAAW,QAAQ,SAAS,GAAG;aACxB,QAAQ,QAAQ,SAAS,GAAG,MAAM;QACvC,UAAU,OAAO,SAAS,GAAG;aAExB,UAAU,OAAO;AAAA;WAEnB;AAAA;SAEF;AAAA;ACnLT,kBAAe,CAAC,KAAK,UAAU;AAC7B,QAAM,SAAS,IAAI,aAAa;AAChC,aAAW,CAAC,KAAK,QAAQ,OAAO;AAC9B,WAAO,OAAO;AAAA;AAEhB,SAAO;AAAA;;"}